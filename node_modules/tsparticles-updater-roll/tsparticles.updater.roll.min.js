/*! For license information please see tsparticles.updater.roll.min.js.LICENSE.txt */
!function(e,o){if("object"==typeof exports&&"object"==typeof module)module.exports=o(require("tsparticles-engine"));else if("function"==typeof define&&define.amd)define(["tsparticles-engine"],o);else{var l="object"==typeof exports?o(require("tsparticles-engine")):o(e.window);for(var t in l)("object"==typeof exports?exports:e)[t]=l[t]}}(this,(e=>(()=>{"use strict";var o={961:o=>{o.exports=e}},l={};function t(e){var n=l[e];if(void 0!==n)return n.exports;var a=l[e]={exports:{}};return o[e](a,a.exports,t),a.exports}t.d=(e,o)=>{for(var l in o)t.o(o,l)&&!t.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:o[l]})},t.o=(e,o)=>Object.prototype.hasOwnProperty.call(e,o),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var n={};return(()=>{t.r(n),t.d(n,{loadRollUpdater:()=>r});var e=t(961);class o{constructor(){this.enable=!1,this.value=0}load(o){o&&(void 0!==o.enable&&(this.enable=o.enable),void 0!==o.value&&(this.value=(0,e.setRangeValue)(o.value)))}}class l{constructor(){this.darken=new o,this.enable=!1,this.enlighten=new o,this.mode="vertical",this.speed=25}load(o){o&&(void 0!==o.backColor&&(this.backColor=e.OptionsColor.create(this.backColor,o.backColor)),this.darken.load(o.darken),void 0!==o.enable&&(this.enable=o.enable),this.enlighten.load(o.enlighten),void 0!==o.mode&&(this.mode=o.mode),void 0!==o.speed&&(this.speed=(0,e.setRangeValue)(o.speed)))}}class a{getTransformValues(e){const o=e.roll?.enable&&e.roll,l=o&&o.horizontal,t=o&&o.vertical;return{a:l?Math.cos(o.angle):void 0,d:t?Math.sin(o.angle):void 0}}init(o){!function(o){const l=o.options.roll;if(l?.enable)if(o.roll={enable:l.enable,horizontal:"horizontal"===l.mode||"both"===l.mode,vertical:"vertical"===l.mode||"both"===l.mode,angle:(0,e.getRandom)()*Math.PI*2,speed:(0,e.getRangeValue)(l.speed)/360},l.backColor)o.backColor=(0,e.rangeColorToHsl)(l.backColor);else if(l.darken.enable&&l.enlighten.enable){const t=(0,e.getRandom)()>=.5?"darken":"enlighten";o.roll.alter={type:t,value:(0,e.getRangeValue)("darken"===t?l.darken.value:l.enlighten.value)}}else l.darken.enable?o.roll.alter={type:"darken",value:(0,e.getRangeValue)(l.darken.value)}:l.enlighten.enable&&(o.roll.alter={type:"enlighten",value:(0,e.getRangeValue)(l.enlighten.value)});else o.roll={enable:!1,horizontal:!1,vertical:!1,angle:0,speed:0}}(o)}isEnabled(e){const o=e.options.roll;return!e.destroyed&&!e.spawning&&!!o?.enable}loadOptions(e,...o){e.roll||(e.roll=new l);for(const l of o)e.roll.load(l?.roll)}update(e,o){this.isEnabled(e)&&function(e,o){const l=e.options.roll,t=e.roll;if(!t||!l?.enable)return;const n=t.speed*o.factor,a=2*Math.PI;t.angle+=n,t.angle>a&&(t.angle-=a)}(e,o)}}async function r(e){await e.addParticleUpdater("roll",(()=>new a))}})(),n})()));