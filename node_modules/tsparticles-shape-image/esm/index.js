import { downloadSvgImage, loadImage } from "./Utils";
import { ImageDrawer } from "./ImageDrawer";
import { ImagePreloaderPlugin } from "./ImagePreloader";
import { errorPrefix } from "tsparticles-engine";
export async function loadImageShape(engine) {
    if (!engine.loadImage) {
        engine.loadImage = async (data) => {
            if (!data.name && !data.src) {
                throw new Error(`${errorPrefix} no image source provided`);
            }
            if (!engine.images) {
                engine.images = [];
            }
            if (engine.images.find((t) => t.name === data.name || t.source === data.src)) {
                return;
            }
            try {
                const image = {
                    name: data.name ?? data.src,
                    source: data.src,
                    type: data.src.substring(data.src.length - 3),
                    error: false,
                    loading: true,
                    replaceColor: data.replaceColor,
                    ratio: data.width && data.height ? data.width / data.height : undefined,
                };
                engine.images.push(image);
                const imageFunc = data.replaceColor ? downloadSvgImage : loadImage;
                await imageFunc(image);
            }
            catch {
                throw new Error(`${errorPrefix} ${data.name ?? data.src} not found`);
            }
        };
    }
    const preloader = new ImagePreloaderPlugin(engine);
    await engine.addPlugin(preloader);
    await engine.addShape(["image", "images"], new ImageDrawer(engine));
}
